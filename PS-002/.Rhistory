wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = weight, data = ps_df)
wls_est %>% summary()
weight
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ fit)
#extract fitted values - exponentiate them
fitted_values = exp(error_reg$fitted.values)
#create weights
weight = 1/fitted_values
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight))
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = weight, data = ps_df)
wls_est_2 = lm(personal_income_wls ~ education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ fit)
#extract fitted values - exponentiate them
fitted_values = exp(error_reg$fitted.values)
#create weights
weight = 1/fitted_values
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight))
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ fit)
#extract fitted values - exponentiate them
fitted_values = exp(error_reg$fitted.values)
#create weights
weight = 1/fitted_values
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = weight, data = ps_df)
wls_est_2 = lm(personal_income_wls ~ education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% summary()
wls_est_2 %>% summary()
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = weight, data = ps_df)
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% summary()
wls_est_2 %>% summary()
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/weight, data = ps_df)
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% summary()
wls_est_2 %>% summary()
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/weight, data = ps_df)
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% summary()
wls_est_2 %>% summary()
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/weight, data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% tidy()
p_load(broom)
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/weight, data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% tidy()
wls_est_2 %>% tidy()
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ fit)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = 1/fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/weight, data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% tidy()
wls_est_2 %>% tidy()
ggplot(
data = data.frame(
fitted = wls_est$fitted.values,
residual = wls_est$residuals
),
aes(x =fitted, y = residual)
) +
geom_point(size = 2.5, alpha = 0.4) +
xlab("WLS Fitted Values") +
ylab("WLS Residual") +
theme_minimal()
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 60
)
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 60
)
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 60
)
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 60
)
pagedown::chrome_print(
input = "05-heteroskedasticity.html",
timeout = 100
)
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
# Load packages
library(pacman)
p_load(tidyverse, broom, skimr, here)
# Load dataset
ps_df = here("ps-002-data.csv") %>% read_csv()
#### ALTERNATIVELY
ps_df = here("ps-002-data.rds") %>% read_rds()
ggplot(data = ps_df, aes(x=personal_income,aes(y=i_female))+ geom_histogram(bins = 1000)
)
ggplot(data = ps_df, aes(x=personal_income,aes(y=i_female)))+ geom_histogram(bins = 1000)
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ education + i_citizen + marrno + i_female + i_female:education, data =ps_df)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
# Knitr options
library(knitr)
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
opts_chunk$set(dev = "svg")
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
options(digits = 4)
options(width = 90)
# Load packages
library(pacman)
p_load(tidyverse, broom, skimr, here)
# Load dataset
ps_df = here("ps-002-data.csv") %>% read_csv()
#### ALTERNATIVELY
ps_df = here("ps-002-data.rds") %>% read_rds()
#model
est17 = lm(
personal_income ~ education + i_citizen + marrno + i_female + i_female:education,
data = ps_df
)
# The results
summary(est17)
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ education + i_citizen + marrno + i_female + i_female:education, data =ps_df)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = weight, data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df)
wls_est %>% tidy()
wls_est_2 %>% tidy()
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ education + i_citizen + marrno + i_female + i_female:education, data =ps_df)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
weight
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ education + i_citizen + marrno + i_female + i_female:education, data =ps_df)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
# Load dataset
ps_df = here("ps-002-data.csv") %>% read_csv()
#### ALTERNATIVELY
ps_df = here("ps-002-data.rds") %>% read_rds()
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ education + i_citizen + marrno + i_female + i_female:education, data =ps_df)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df_wls = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = weight, data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df_wls)
wls_est %>% tidy()
wls_est_2 %>% tidy()
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = sqrt(weight), data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df_wls)
wls_est %>% tidy()
wls_est_2 %>% tidy()
weight
#retrieve residuals, square them then take log of those values to get log(u_i-squared)
l_resid = log(est17$residuals^2)
fit = est17$fitted.values
#run a regression of fitted values on your residual variable
error_reg = lm(l_resid ~ education + i_citizen + marrno + i_female + i_female:education, data =ps_df)
#extract fitted values and exponentiate them
fitted_values_exp = exp(error_reg$fitted.values)
#create weights
weight = fitted_values_exp
#I will show you how to do this 'by hand' as well but this is not required for full credit
ps_df_wls = ps_df %>% mutate(education_wls = education*1/sqrt(weight),
i_citizen_wls = i_citizen*1/sqrt(weight),
marrno_wls = marrno*1/sqrt(weight),
i_female_wls = i_female*1/sqrt(weight),
i_female_educ_wls = (education*i_female)*1/(sqrt(weight)),
intercept_wls = 1*1/sqrt(weight),
personal_income_wls = personal_income*1/sqrt(weight))
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = sqrt(weight), data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df_wls)
wls_est %>% tidy()
wls_est_2 %>% tidy()
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/sqrt(weight), data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df_wls)
wls_est %>% tidy()
wls_est_2 %>% tidy()
#using the 'weights' parameter
wls_est = lm(personal_income ~ education + i_citizen + marrno + i_female + i_female:education, weights = 1/weight, data = ps_df)
#using reweighted data
wls_est_2 = lm(personal_income_wls ~ -1 + intercept_wls + education_wls + i_citizen_wls + marrno_wls + i_female_wls + i_female_educ_wls, data = ps_df_wls)
wls_est %>% tidy()
wls_est_2 %>% tidy()
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
ggplot(
data = data.frame(
fitted = wls_est$fitted.values,
residual = wls_est$residuals
),
aes(x =fitted, y = residual)
) +
geom_point(size = 2.5, alpha = 0.4) +
xlab("WLS Fitted Values") +
ylab("WLS Residual") +
theme_minimal()
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
pf(1.5, 14,14, lower.tail = F)
pagedown::chrome_print("ps02.html")
#pagedown::chrome_print(input = "002-questions.html", output = "002-solutions.pdf")
resid(est09)^2
psdf$e_bp = resid(est09)^2
psdf$e_bp
# Arrange the dataset by commute time
ps_df = ps_df %>% arrange(education)
# Load packages
library(pacman)
p_load(tidyverse, broom, skimr, here)
# Arrange the dataset by commute time
ps_df = ps_df %>% arrange(education)
# Create the two subsets (first and last 8,000 observations)
g1 = head(ps_df, 1100)
g2 = tail(ps_df, 1100)
# Run the two regressions
est12_1 = lm(personal_income ~education+ i_female + i_citizen, data = g1)
est12_2 = lm(personal_income ~education+ i_female + i_citizen, data = g2)
# Find the SSE from each regression
sse1 = sum(residuals(est12_1)^2)
sse2 = sum(residuals(est12_2)^2)
# GQ test statistic
gq = sse2 / sse1
# p-value
pf(gq, df1 = 1100, df2 = 1100, lower.tail = F)
est12_1 %>% summary()
est12_2 %>% summary()
# The new model
est16 = lm_robust(
personal_income ~education+ i_female +education:i_female + i_citizen,
data = ps_df,
se_type = "HC2"
)
# Arrange the dataset by commute time
ps_df = ps_df %>% arrange(education)
# Create the two subsets (first and last 8,000 observations)
g1 = head(ps_df, 2000)
g2 = tail(ps_df, 2000)
# Run the two regressions
est12_1 = lm(personal_income ~education+ i_female + i_citizen, data = g1)
est12_2 = lm(personal_income ~education+ i_female + i_citizen, data = g2)
# Find the SSE from each regression
sse1 = sum(residuals(est12_1)^2)
sse2 = sum(residuals(est12_2)^2)
# GQ test statistic
gq = sse2 / sse1
# p-value
pf(gq, df1 = 1100, df2 = 1100, lower.tail = F)
est12_1 = lm(personal_income ~education+ i_female + i_citizen, data = g1)
est12_2
est12_1
# Arrange the dataset by commute time
ps_df = ps_df %>% arrange(education)
# Create the two subsets (first and last 8,000 observations)
g1 = head(ps_df, 1100)
g2 = tail(ps_df, 1100)
# Run the two regressions
est12_1 = lm(personal_income ~education+ i_female + i_citizen, data = g1)
est12_2 = lm(personal_income ~education+ i_female + i_citizen, data = g2)
# Find the SSE from each regression
sse1 = sum(residuals(est12_1)^2)
sse2 = sum(residuals(est12_2)^2)
# GQ test statistic
gq = sse2 / sse1
# p-value
pf(gq, df1 = 1100, df2 = 1100, lower.tail = F)
# Get residuals from the model in 16
resid16 = ps_df$personal_income - est16$fitted.values
# Regression for BP test
est18 = lm(
resid16^2 ~
education+ i_female + i_citizen
education:i_female +i_citizen:education +i_citizen:i_female
# Get residuals from the model in 16
resid16 = ps_df$personal_income - est16$fitted.values
# Regression for BP test
est18 = lm(
resid16^2 ~education + i_female + i_citizen
education:i_female +i_citizen:education +i_citizen:i_female
est18 = lm(
resid16^2 ~education + i_female + i_citizen
education:i_female +i_citizen:education +i_citizen:i_female
I(education^2) + I(education^2):i_female +
i_citizen:i_female:education,
data = ps_df
)
# Get residuals from the model in 16
resid16 = ps_df$personal_income - est16$fitted.values
# Regression for BP test
est18 = lm(
resid16^2 ~education + i_female + i_citizen +
education:i_female +i_citizen:education +i_citizen:i_female
I(education^2) + I(education^2):i_female +
# Get residuals from the model in 16
resid16 = ps_df$personal_income - est16$fitted.values
# Regression for BP test
est18 = lm(
resid16^2 ~education + i_female + i_citizen +
education:i_female +i_citizen:education +i_citizen:i_female +
I(education^2) + I(education^2):i_female +
i_citizen:i_female:education,
data = ps_df
)
# Results
est18 %>% tidy()
est18%>% summary()
summary(est18)
lm18 = summary(est18)$r.squared * nrow(ps_df)
# Test against Chi-squared 5
pchisq(lm18, df = 9, lower.tail = F) %>% round(3)
pchisq(lm18, df = 9, lower.tail = F)
#pagedown::chrome_print("ps02.html")
pagedown::chrome_print(input = "002-solutions.html", output = "002-solutions.pdf")
#pagedown::chrome_print("ps02.html")
pagedown::chrome_print(input = "02-solutions.html", output = "002-solutions.pdf")
#pagedown::chrome_print("ps02.html")
pagedown::chrome_print(input = "02-solutions.html", output = "002-solutions.pdf")
#pagedown::chrome_print("ps02.html")
pagedown::chrome_print(input = "ps02.html", output = "002-solutions.pdf")
sum(est16$coefficients * c(1,16,1,16)) %>% magrittr::multiply_by(1e4) %>% scales::dollar(1)
# Knitr options
library(knitr)
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
opts_chunk$set(dev = "svg")
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
options(digits = 4)
options(width = 90)
sum(est16$coefficients * c(1,16,1,16)) %>% magrittr::multiply_by(1e4) %>% scales::dollar(1)
p_load(tidyverse)
library(pacman)
p_load(tidyverse)
sum(est16$coefficients * c(1,16,1,16)) %>% magrittr::multiply_by(1e4) %>% scales::dollar(1)
# The new model
est16 = lm_robust(
personal_income ~education+ i_female +education:i_female + i_citizen,
data = ps_df,
se_type = "HC2"
)
# Load estimatr package
p_load(estimatr)
# Estimate het-robust standard errors
est13 = lm_robust(
personal_income ~education+ i_female + i_citizen,
data = ps_df,
se_type = "HC2"
)
# Print results
est13 %>% summary()
# The new model
est16 = lm_robust(
personal_income ~education+ i_female +education:i_female + i_citizen,
data = ps_df,
se_type = "HC2"
)
# The results
summary(est16)
sum(est16$coefficients * c(1,16,0,0,0)) %>% magrittr::multiply_by(1e4) %>% scales::dollar(1)
sum(est16$coefficients * c(1,16,1,0,16)) %>% magrittr::multiply_by(1e4) %>% scales::dollar(1)
#pagedown::chrome_print("ps02.html")
pagedown::chrome_print(input = "ps02.html", output = "002-solutions.pdf")
