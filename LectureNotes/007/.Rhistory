pagedown::chrome_print(
input = "06-consistency.html",
timeout = 60
)
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values)
#model
est17 = lm(
personal_income ~ education + i_female + education:i_female + marrno,
data = ps_df
)
# Load packages
library(pacman)
p_load(tidyverse, broom, skimr, here)
# Load dataset
ps_df = here("ps-002-data.csv") %>% read_csv()
#model
est17 = lm(
personal_income ~ education + i_female + education:i_female + marrno,
data = ps_df
)
# The results
summary(est17)
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values)
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
#create weights
weights = 1/fitted_values
weights
wls_est = lm(personal_income ~ education + i_female + education:i_female + marrno, weights = weights, data = ps_df)
wls_est %>% summary()
#model
est17 = lm(
personal_income ~ education + i_citizen + education:i_citizen + marrno,
data = ps_df
)
# The results
summary(est17)
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values)
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
#create weights
weights = 1/fitted_values
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno, weights = weights, data = ps_df)
wls_est %>% summary()
#model
est17 = lm(
personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female,
data = ps_df
)
# The results
summary(est17)
#model
est17 = lm(
personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,
data = ps_df
)
# The results
summary(est17)
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values)
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
#create weights
weights = 1/fitted_values
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno, weights = weights, data = ps_df)
wls_est %>% summary()
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,, weights = weights, data = ps_df)
wls_est %>% summary()
summary(wls_est)$coef[3,4]
summary(wls_est)$coef[3,5]
summary(wls_est)$coef[4,4]
summary(wls_est)$coef[5,4]
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,, weights = weights, data = ps_df)
wls_est %>% summary()
error_reg %>% summary()
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values + est17$fitted.values^2 + est17$fitted.values^3)
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
#create weights
weights = 1/fitted_values
error_reg %>% summary()
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values + est17$fitted.values^2 + est17$fitted.values^3)
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
#create weights
weights = 1/fitted_values
error_reg %>% summary()
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values + I(est17$fitted.values^2) + I(est17$fitted.values^3))
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
error_reg %>% summary()
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,, weights = weights, data = ps_df)
wls_est %>% summary()
fitted_values = error_reg$fitted.values^2
weights = 1/fitted_values
summary(error_reg)
#regress fitted.values on residuals
error_reg = lm(abs(est17$residuals) ~ est17$fitted.values + I(est17$fitted.values^2) + I(est17$fitted.values^3) + I(est17$fitted.values^4))
#regress fitted.values on residuals
summary(error_reg)
#extract fitted values - square them
fitted_values = error_reg$fitted.values^2
#create weights
weights = 1/fitted_values
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,, weights = weights, data = ps_df)
wls_est %>% summary()
library)pacman
library(pacman)
p_load(tidyverse)
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,, weights = weights, data = ps_df)
wls_est %>% summary()
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education,, weights = weights, data = ps_df)
wls_est %>% tidy()
p_load(broom)
wls_est %>% tidy()
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education:i_citizen, weights = weights, data = ps_df)
wls_est %>% tidy()
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_female:education:i_citizen + i_female:education, weights = weights, data = ps_df)
wls_est %>% tidy()
wls_est = lm(personal_income ~ education + i_citizen + education:i_citizen + marrno + i_female + i_citizen:i_female + i_female:education:i_citizen + i_female:education, weights = weights, data = ps_df)
wls_est %>% tidy()
# Load dataset
ps_df = here("ps-002-data.csv") %>% read_csv()
p_load(here)
# Load dataset
ps_df = here("ps-002-data.csv") %>% read_csv()
# Summary of 'ps_df' variables
summary(ps_df)
# ORRR Skim the dataset
skim(ps_df)
p_load(skimr)
skim(ps_df)
library(readr)
ps_002_data <- read_csv("~/Desktop/GithubProjects/Econometrics/EC421/Spring2021/PS-002/ps-002-data.csv")
View(ps_002_data)
ps_002_data %<>% select(-weights)
p_load(magrittr)
ps_002_data %<>% select(-weights)
write_csv(ps_002_data, "/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/PS-002/ps-002-data.csv")
write_rds(ps_002_data, "/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/PS-002/ps-002-data.rds")
# Plot newfangled time-series graph of birth rates
ggplot(data = birth_df %>% filter(year < 2050),
aes(
x = year, y = factor(month, labels = month.abb),
fill = births/1e5, color = births/1e5
)
) +
geom_tile() +
xlab("Year") +
ylab("Month") +
theme_pander(base_family = "Fira Sans Book", base_size = 20) +
scale_fill_viridis("Births (100K)", option = "magma", limits = c(lo, hi)/1e5) +
scale_color_viridis("Births (100K)", option = "magma", limits = c(lo, hi)/1e5) +
theme(
legend.position = "bottom",
legend.key.width = unit(1.5, units = "in"),
legend.key.height = unit(0.2, units = "in"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
line = element_blank(),
rect = element_blank(),
axis.ticks = element_blank()
)
# Plot newfangled time-series graph of birth rates
ggplot(data = birth_df %>% filter(year < 2050),
aes(
x = year, y = factor(month, labels = month.abb),
fill = births/1e5, color = births/1e5
)
) +
geom_tile() +
xlab("Year") +
ylab("Month") +
theme_pander(base_family = "Fira Sans Book", base_size = 20) +
scale_fill_viridis("Births (100K)", option = "magma", limits = c(lo, hi)/1e5) +
scale_color_viridis("Births (100K)", option = "magma", limits = c(lo, hi)/1e5) +
theme(
legend.position = "bottom",
legend.key.width = unit(1.5, units = "in"),
legend.key.height = unit(0.2, units = "in"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
line = element_blank(),
rect = element_blank(),
axis.ticks = element_blank()
)
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(
broom, here, tidyverse,
latex2exp, ggplot2, ggthemes, viridis, extrafont, gridExtra,
kableExtra,
dplyr, magrittr, knitr, parallel
)
# Define pink color
red_pink <- "#e64173"
turquoise <- "#20B2AA"
grey_light <- "grey70"
grey_mid <- "grey50"
grey_dark <- "grey20"
# Dark slate grey: #314f4f
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
opts_chunk$set(dev = "svg")
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -0.5, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 18, family = "STIXGeneral"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_math <- theme_void() + theme(
text = element_text(family = "MathJax_Math"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_serif <- theme_void() + theme(
text = element_text(family = "MathJax_Main"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes <- theme_void() + theme(
text = element_text(family = "Fira Sans Book"),
axis.title = element_text(size = 18),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = grey_light,
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
# Load births data; drop totals; create time variable
birth_df <- read_csv("usa_birth_1933_2015.csv") %>%
janitor::clean_names() %>%
filter(month != "TOT") %>%
mutate(
month = as.numeric(month),
time = year + (month-1)/12
)
# Load days of months data
days_df <- read_csv("days_of_month.csv")
# Clean up days
days_lon <- gather(days_df, year, n_days, -Month)
days_lon <- janitor::clean_names(days_lon)
days_lon$year <- as.integer(days_lon$year)
# Join
birth_df <- left_join(
x = birth_df,
y = days_lon,
by = c("year", "month")
)
# Calculate 30-day equivalent births by month
birth_df %<>% mutate(
births_30day = births / n_days * 30
)
lo <- min(c(birth_df$births, birth_df$births_30day))
hi <- max(c(birth_df$births, birth_df$births_30day))
# Plot standard time-series graph of birth rates
ggplot(data = birth_df,
aes(time, births/1e5)
) +
geom_line(color = red_pink) +
ylab("Births (100K)") +
xlab("Time") +
theme_pander(base_family = "Fira Sans Book", base_size = 20)
# Plot newfangled time-series graph of birth rates
ggplot(data = birth_df %>% filter(year < 2050),
aes(
x = year, y = factor(month, labels = month.abb),
fill = births_30day /1e5, color = (births/n_days) * 30 /1e5
)
) +
geom_tile() +
xlab("Year") +
ylab("Month") +
theme_pander(base_family = "Fira Sans Book", base_size = 20) +
scale_fill_viridis("Births (100K)", option = "magma", limits = c(lo, hi)/1e5) +
scale_color_viridis("Births (100K)", option = "magma", limits = c(lo, hi)/1e5) +
theme(
legend.position = "bottom",
legend.key.width = unit(1.5, units = "in"),
legend.key.height = unit(0.2, units = "in"),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
line = element_blank(),
rect = element_blank(),
axis.ticks = element_blank()
)
