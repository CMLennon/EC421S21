# Set seed
set.seed(1246)
# Generate data
walk_df <- lapply(X = 1:1e3, FUN = function(i) {
tibble(x = cumsum(rnorm(1e2)), t = 1:1e2, walk = as.character(i))
}) %>% bind_rows()
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(
broom, here, tidyverse,
latex2exp, ggplot2, ggthemes, viridis, extrafont, gridExtra,
kableExtra,
data.table,
dplyr,
lubridate,
magrittr, knitr, parallel
)
# Define pink color
red_pink <- "#e64173"
turquoise <- "#20B2AA"
grey_light <- "grey70"
grey_mid <- "grey50"
grey_dark <- "grey20"
# Dark slate grey: #314f4f
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
opts_chunk$set(dev = "svg")
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -0.5, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 18, family = "STIXGeneral"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_math <- theme_void() + theme(
text = element_text(family = "MathJax_Math"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_serif <- theme_void() + theme(
text = element_text(family = "MathJax_Main"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes <- theme_void() + theme(
text = element_text(family = "Fira Sans Book"),
axis.title = element_text(size = 18),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = grey_light,
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_set(theme_gray(base_size = 20))
# Set seed
set.seed(1246)
# Generate data
walk_df <- lapply(X = 1:1e3, FUN = function(i) {
tibble(x = cumsum(rnorm(1e2)), t = 1:1e2, walk = as.character(i))
}) %>% bind_rows()
# Plot
ggplot(data = walk_df, aes(x = t, y = x, color = walk)) +
geom_hline(yintercept = 0, color = "grey85", size = 1.25) +
geom_path(size = 0.25) +
scale_color_viridis(option = "magma", discrete = T, end = 0.95) +
theme_axes_math
set.seed(1246)
# Generate data
walk_df <- lapply(X = 1:1e3, FUN = function(i) {
tibble(x = cumsum(rnorm(1e2)), t = 1:1e2, walk = as.character(i))
}) %>% bind_rows()
# Plot
ggplot(data = walk_df, aes(x = t, y = x, color = walk)) +
geom_hline(yintercept = 0, color = "grey85", size = 1.25) +
geom_path(size = 0.25) +
scale_color_viridis(option = "magma", discrete = T, end = 0.95) +
theme_axes_math
walk_df <- lapply(X = 1:1e3, FUN = function(i) {
tibble(x = cumsum(rnorm(1e2)), t = 1:1e2, walk = as.character(i))
}) %>% bind_rows()
walk_df
ggplot(data = walk_df, aes(x = t, y = x, color = walk)) +
geom_hline(yintercept = 0, color = "grey85", size = 1.25) +
geom_path(size = 0.25) +
scale_color_viridis(option = "magma", discrete = T, end = 0.95) +
theme_axes_math
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(
broom, here, tidyverse,
latex2exp, ggplot2, ggthemes, viridis, extrafont, gridExtra,
kableExtra,
data.table,
dplyr,
lubridate,
magrittr, knitr, parallel
)
# Define pink color
red_pink <- "#e64173"
turquoise <- "#20B2AA"
grey_light <- "grey70"
grey_mid <- "grey50"
grey_dark <- "grey20"
# Dark slate grey: #314f4f
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
opts_chunk$set(dev = "svg")
options(device = function(file, width, height) {
svg(tempfile(), width = width, height = height)
})
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -0.5, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 18, family = "STIXGeneral"),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_math <- theme_void() + theme(
text = element_text(family = "Cambria_Math"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes_serif <- theme_void() + theme(
text = element_text(family = "MathJax_Main"),
axis.title = element_text(size = 22),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = "grey70",
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes <- theme_void() + theme(
text = element_text(family = "Fira Sans Book"),
axis.title = element_text(size = 18),
axis.title.x = element_text(hjust = .95, margin = margin(0.15, 0, 0, 0, unit = "lines")),
axis.title.y = element_text(vjust = .95, margin = margin(0, 0.15, 0, 0, unit = "lines")),
axis.line = element_line(
color = grey_light,
size = 0.25,
arrow = arrow(angle = 30, length = unit(0.15, "inches")
)),
plot.margin = structure(c(1, 0, 1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_set(theme_gray(base_size = 20))
# Set seed
set.seed(1246)
# Generate data
walk_df <- lapply(X = 1:1e3, FUN = function(i) {
tibble(x = cumsum(rnorm(1e2)), t = 1:1e2, walk = as.character(i))
}) %>% bind_rows()
# Plot
ggplot(data = walk_df, aes(x = t, y = x, color = walk)) +
geom_hline(yintercept = 0, color = "grey85", size = 1.25) +
geom_path(size = 0.25) +
scale_color_viridis(option = "magma", discrete = T, end = 0.95) +
theme_axes_math
```
set.seed(1246)
# Generate data
walk_df <- lapply(X = 1:1e3, FUN = function(i) {
tibble(x = cumsum(rnorm(1e2)), t = 1:1e2, walk = as.character(i))
}) %>% bind_rows()
# Plot
ggplot(data = walk_df, aes(x = t, y = x, color = walk)) +
geom_hline(yintercept = 0, color = "grey85", size = 1.25) +
geom_path(size = 0.25) +
scale_color_viridis(option = "magma", discrete = T, end = 0.95) +
theme_axes_math
pagedown::chrome_print(
input = "09-nonstationarity.html",
timeout = 60
)
pagedown::chrome_print(
input = "09-nonstationarity.html",
timeout = 60
)
pagedown::chrome_print(
input = "09-nonstationarity.html",
timeout = 60
)
pagedown::chrome_print(
input = "09-nonstationarity.html",
timeout = 60
)
p_load(haven)
dta_file = read_dta('/Users/connor/Desktop/duplicates_and_toy_data/ztrax_hmda_data_CA.dta')
dta_file
dupes = fread('/Users/connor/Desktop/duplicates_and_toy_data/duplicated_geoms_sortingwui.csv')
dupes$PropertyAddressLatitude
dupes_sf = st_as_sf(dupes, coords('PropertyAddressLatitude', 'PropertyAddressLongitude'))
p_load(sf)
dupes_sf = st_as_sf(dupes, coords('PropertyAddressLatitude', 'PropertyAddressLongitude'))
ztrax_hmda_sf = st_as_sf(dupes%>% filter(!is.na(PropertyAddressLongitude)& !is.na(PropertyAddressLatitude)),
coords = c("PropertyAddressLongitude", "PropertyAddressLatitude"),
crs = 4269, agr = "constant") %>% unique()
ztrax_hmda_sf = st_as_sf(dupes%>% filter(!is.na(PropertyAddressLongitude)& !is.na(PropertyAddressLatitude)),
coords = c("PropertyAddressLongitude", "PropertyAddressLatitude"),
crs = 4269, agr = "constant")
ztrax_hmda_sf
zillowdbloc <- '/Volumes/G-DRIVE-mobile-SSD-R-Series/ZTrans/sorting_wui.sqlite'
ztrax_database <- dbConnect(RSQLite::SQLite(), zillowdbloc)
hmda_database <- dbConnect(Postgres(), host = 'localhost', dbname = 'hmda',
password = '', user = 'postgres')
p_load(gmodels,
raster,
tidyverse,
gtools,
RPostgres,
sqldf,
RODBC,
DT,
rgdal,
UScensus2000tract,
sf,
sp,
rgeos,
spatialEco,
tigris,
dbplyr,
data.table,
here,
stringi,
elevatr,
haven,
rgdal,
gdalUtils)
zillowdbloc <- '/Volumes/G-DRIVE-mobile-SSD-R-Series/ZTrans/sorting_wui.sqlite'
ztrax_database <- dbConnect(RSQLite::SQLite(), zillowdbloc)
hmda_database <- dbConnect(Postgres(), host = 'localhost', dbname = 'hmda',
password = '', user = 'postgres')
p_load(Rsqlite)
p_load(RSQlite)
p_load(RSQLite)
zillowdbloc <- '/Volumes/G-DRIVE-mobile-SSD-R-Series/ZTrans/sorting_wui.sqlite'
ztrax_database <- dbConnect(RSQLite::SQLite(), zillowdbloc)
hmda_database <- dbConnect(Postgres(), host = 'localhost', dbname = 'hmda',
password = '', user = 'postgres')
p_load(gmodels,
raster,
tidyverse,
gtools,
RPostgres,
sqldf,
RODBC,
DT,
rgdal,
UScensus2000tract,
sf,
sp,
rgeos,
spatialEco,
tigris,
dbplyr,
data.table,
here,
stringi,
elevatr,
haven,
rgdal,
gdalUtils)
library(pacman)
p_load(gmodels,
raster,
tidyverse,
gtools,
RPostgres,
sqldf,
RODBC,
DT,
rgdal,
UScensus2000tract,
sf,
sp,
rgeos,
spatialEco,
tigris,
dbplyr,
data.table,
here,
stringi,
elevatr,
haven,
rgdal,
gdalUtils)
p_update()
p_load(gmodels,
raster,
tidyverse,
gtools,
RPostgres,
sqldf,
RODBC,
DT,
rgdal,
UScensus2000tract,
sf,
sp,
rgeos,
spatialEco,
tigris,
dbplyr,
data.table,
here,
stringi,
elevatr,
haven,
rgdal,
gdalUtils)
updateR()
p_load(installr)
updateR()
