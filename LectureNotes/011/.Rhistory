name = c("Y", "Pr", "LQ", "Fe"),
x = c(1, 3, 2, 2),
y = c(2, 2, 1, 2)
)
)
ex2 = dagify(
Y ~ Fe,
Y ~ LQ,
coords = tibble(
name = c("Y", "LQ", "Fe"),
x = c(1, 2, 2),
y = c(2, 1, 2)
)
)
ex2
ex2 %<>% fortify() %T>% setDT()
ex2
ex2[, `:=`(
xa = x + (xend-x) * (mult),
ya = y + (yend-y) * (mult),
xb = x + (xend-x) * (1-mult),
yb = y + (yend-y) * (1-mult)
)]
ex2
ex2 = dagify(
Y ~ Fe,
Y ~ LQ,
coords = tibble(
name = c("Y", "LQ", "Fe"),
x = c(1, 2, 2),
y = c(2, 1, 2)
)
)
# Convert to data.table
ex2 %<>% fortify() %T>% setDT()
#add Pr back in
ex2 = rbind(ex2, list('Pr', 3, 2, NA, NA, NA, NA, FALSE))
mult = 0.15
ex2[, `:=`(
xa = x + (xend-x) * (mult),
ya = y + (yend-y) * (mult),
xb = x + (xend-x) * (1-mult),
yb = y + (yend-y) * (1-mult)
)]
ex2
ggplot(
data = ex2,
aes(x = x, y = y, xend = xend, yend = yend)
) +
geom_point(
size = 20,
fill = "white",
color = purple,
shape = 21,
stroke = 0.6
) +
geom_curve(
aes(x = xa, y = ya, xend = xb, yend = yb),
curvature = 0,
arrow = arrow(length = unit(0.07, "npc")),
color = purple,
size = 1.2,
lineend = "round"
) +
geom_text(
data = . %>% .[,.(name,x,y,xend=x,yend=y)] %>% unique(),
aes(x = x, y = y, label = name),
family = "Fira Sans Medium",
size = 8,
color = purple,
fontface = "bold"
) +
theme_void() +
theme(
legend.position = "none",
) +
coord_cartesian(
xlim = c(ex2[,min(x)]*0.95, ex2[,max(x)]*1.05),
ylim = c(ex2[,min(y)]*0.8, ex2[,max(y)]*1.1)
)
# Set seed and sample size
set.seed(12345)
n = 100
# Generate O and A independently
cb_dt = data.table(
O = runif(n),
A = runif(n)
)
library(pacman)
p_load(data.table)
p_load(dagitty)
# Set seed and sample size
set.seed(12345)
n = 100
# Generate O and A independently
cb_dt = data.table(
O = runif(n),
A = runif(n)
)
# Determine cardiovascular disease and mortality
cb_dt[, `:=`(
C = 1*(O + A > 1))]
cb_dt[, `:=`(
M = runif(n)/6 + 2*C/3 + A/6
)]
# Population relationship
p1 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
color = slate,
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
p_load(tidyverse)
# Set seed and sample size
set.seed(12345)
n = 100
# Generate O and A independently
cb_dt = data.table(
O = runif(n),
A = runif(n)
)
# Determine cardiovascular disease and mortality
cb_dt[, `:=`(
C = 1*(O + A > 1))]
cb_dt[, `:=`(
M = runif(n)/6 + 2*C/3 + A/6
)]
# Population relationship
p1 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
color = slate,
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Adding hospitalization
p2 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
aes(color = as.factor(C)),
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
scale_color_manual(
"Caridovascular Disease",
values = c(purple, orange),
labels = c("No", "Yes")
) +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Conditioning on hospitalization
p3 = ggplot(
data = cb_dt[C==1],
aes(x = O, y = M)
) +
geom_point(
color = orange,
size = 2.5,
alpha = 0.8
) +
geom_smooth(
color = grey,
SE = F,
method = 'lm'
)+
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "none",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Align the plots
aligned = align_patches(p1, p2, p3)
p_load(patches)
p_load(patchwork)
# Set seed and sample size
set.seed(12345)
n = 100
# Generate O and A independently
cb_dt = data.table(
O = runif(n),
A = runif(n)
)
# Determine cardiovascular disease and mortality
cb_dt[, `:=`(
C = 1*(O + A > 1))]
cb_dt[, `:=`(
M = runif(n)/6 + 2*C/3 + A/6
)]
# Population relationship
p1 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
color = slate,
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Adding hospitalization
p2 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
aes(color = as.factor(C)),
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
scale_color_manual(
"Caridovascular Disease",
values = c(purple, orange),
labels = c("No", "Yes")
) +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Conditioning on hospitalization
p3 = ggplot(
data = cb_dt[C==1],
aes(x = O, y = M)
) +
geom_point(
color = orange,
size = 2.5,
alpha = 0.8
) +
geom_smooth(
color = grey,
SE = F,
method = 'lm'
)+
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "none",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Align the plots
aligned = align_patches(p1, p2, p3)
aligned[[1]]
p1
# Set seed and sample size
set.seed(12345)
n = 100
# Generate O and A independently
cb_dt = data.table(
O = runif(n),
A = runif(n)
)
# Determine cardiovascular disease and mortality
cb_dt[, `:=`(
C = 1*(O + A > 1))]
cb_dt[, `:=`(
M = runif(n)/6 + 2*C/3 + A/6
)]
# Population relationship
p1 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
color = slate,
size = 2.5,
alpha = 0.8
) +
geom_smooth(se = F, method = 'lm')+
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Adding hospitalization
p2 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
aes(color = as.factor(C)),
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
scale_color_manual(
"Caridovascular Disease",
values = c(purple, orange),
labels = c("No", "Yes")
) +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Conditioning on hospitalization
p3 = ggplot(
data = cb_dt[C==1],
aes(x = O, y = M)
) +
geom_point(
color = orange,
size = 2.5,
alpha = 0.8
) +
geom_smooth(
color = grey,
SE = F,
method = 'lm'
)+
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "none",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Align the plots
aligned = align_patches(p1, p2, p3)
# Set seed and sample size
set.seed(12345)
n = 100
# Generate O and A independently
cb_dt = data.table(
O = runif(n),
A = runif(n)
)
# Determine cardiovascular disease and mortality
cb_dt[, `:=`(
C = 1*(O + A > 1))]
cb_dt[, `:=`(
M = runif(n)/6 + 2*C/3 + A/6
)]
# Population relationship
p1 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
color = slate,
size = 2.5,
alpha = 0.8
) +
geom_smooth(se = F, method = 'lm')+
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Adding hospitalization
p2 = ggplot(
data = cb_dt,
aes(x = O, y = M)
) +
geom_point(
aes(color = as.factor(C)),
size = 2.5,
alpha = 0.8
) +
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
scale_color_manual(
"Caridovascular Disease",
values = c(purple, orange),
labels = c("No", "Yes")
) +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "bottom",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Conditioning on hospitalization
p3 = ggplot(
data = cb_dt[C==1],
aes(x = O, y = M)
) +
geom_point(
color = orange,
size = 2.5,
alpha = 0.8
) +
geom_smooth(
data = cb_dt[C==1],
aes(x = O, y = M),
color = grey,
se = F,
method = 'lm'
)+
scale_y_continuous("Mortality Likelihood (M)") +
scale_x_continuous("Obesity (O)") +
theme_minimal(
base_family = "Fira Sans",
base_size = 14
) +
theme(
panel.grid = element_blank(),
legend.position = "none",
legend.margin=margin(t=0, r=0, b=-0.3, l=0, unit="cm")
) +
coord_cartesian(ylim = c(0,1), xlim = c(0,1))
# Align the plots
aligned = align_patches(p1, p2, p3)
lm(data = cb_dt, M ~ O)
lm(data = cb_dt, M ~ O) %>% tidy()
p_load(tidy)
p_load(broom)
lm(data = cb_dt, M ~ O) %>% tidy()
lm(data = cb_dt %>% filter(C == 1), M ~ O) %>% tidy()
pagedown::chrome_print("SCM.html", output = "SCM.pdf")
pagedown::chrome_print("SCM.html", output = "SCMl-nopause.pdf")
