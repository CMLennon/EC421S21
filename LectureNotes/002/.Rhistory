p_load(generativeart)
library(pacman)
p_load(generativeart)
devtools::install_github("cutterkom/generativeart")
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel)
# Define pink color
red_pink <- "#e64173"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
# dpi = 300,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
p_load(ggtheme)
p_load(ggthemes)
library(ggthemes)
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel, here)
# Define pink color
red_pink <- "#e64173"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
# dpi = 300,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
xfun::session_info("pagedown")
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
chrome_print("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
p_load(pagedown)
chrome_print("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
?chrome_print
rmarkdown::remder("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
rmarkdown::render("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
chrome_print("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
chrome_print("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
chrome_print("/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/02-Review.html")
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel, here)
# Define pink color
red_pink <- "#e64173"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
# dpi = 300,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
pagedown::find_chrome()
pagedown::chrome_print(input = "/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes/002/002/genart.png")
pagedown::chrome_print(input = "/EC421/Spring2021/LectureNotes/002/002/genart.png", work_dir = "/Users/connor/Desktop/GithubProjects/Econometrics")
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
pagedown::chrome_print(input = "/EC421/Spring2021/LectureNotes/002/02-review.html", work_dir = "/Users/connor/Desktop/GithubProjects/Econometrics/002/wd")
pagedown::chrome_print(
input ="/02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="~/02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="Users/connor/Desktop/GithubProjects/Econometrics/002/02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="Users/connor/Desktop/GithubProjects/Econometrics/002/02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 60
)
pagedown::chrome_print(
input ="02-review.html",
timeout = 600
)
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, ggforce, viridis, dplyr, magrittr, knitr, parallel)
# Notes directory
dir_slides <- "/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -0.5, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes <- theme_empty + theme(
axis.title = element_text(size = 18),
plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
)
pagedown::chrome_print(
input = "03-review.html",
timeout = 60
)
pagedown::chrome_print(
input = "03-review.html",
timeout = 60
)
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel, here)
# Define pink color
red_pink <- "#e64173"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
# dpi = 300,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
lm(y ~ x, data = pop_df) %>% tidy()
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, viridis, dplyr, magrittr, knitr, parallel, here)
# Define pink color
red_pink <- "#e64173"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
# dpi = 300,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
# Set population and sample sizes
n_p <- 100
n_s <- 30
# Set the seed
set.seed(12468)
# Generate data
pop_df <- tibble(
i = 3,
x = rnorm(n_p, mean = 5, sd = 1.5) + runif(n_p, 0, 1),
e = rnorm(n_p, mean = 0, sd = 1),
y = i + 0.5 * x + e,
row = rep(1:sqrt(n_p), times = sqrt(n_p)),
col = rep(1:sqrt(n_p), each = sqrt(n_p)),
s1 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s2 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s))),
s3 = sample(x = c(rep(T, n_s), rep(F, n_p - n_s)))
)
# Regressions
lm0 <- lm(y ~ x, data = pop_df)
lm1 <- lm(y ~ x, data = filter(pop_df, s1 == T))
lm2 <- lm(y ~ x, data = filter(pop_df, s2 == T))
lm3 <- lm(y ~ x, data = filter(pop_df, s3 == T))
# Simulation
set.seed(12468)
sim_df <- mclapply(mc.cores = 10, X = 1:1e4, FUN = function(x, size = n_s) {
lm(y ~ x, data = pop_df %>% sample_n(size = size)) %>% tidy()
}) %>% do.call(rbind, .) %>% as_tibble()
tidy(lm(y ~ x, pop_df))
```
lm(y ~ x, data = pop_df) %>% tidy()
# Create confidence intervals for b1
ci_df <- sim_df %>% filter(term == "x") %>%
mutate(
lb = estimate - std.error * qt(.975, 28),
ub = estimate + std.error * qt(.975, 28),
ci_contains = (lm0$coefficients[2] >= lb) & (lm0$coefficients[2] <= ub),
ci_above = lm0$coefficients[2] < lb,
ci_below = lm0$coefficients[2] > ub,
ci_group = 2 * ci_above + (!ci_below)
) %>%
arrange(ci_group, estimate) %>%
mutate(x = 1:1e4)
# Plot
ggplot(data = ci_df) +
geom_segment(aes(y = lb, yend = ub, x = x, xend = x, color = ci_contains)) +
geom_hline(yintercept = lm0$coefficients[2]) +
scale_y_continuous(breaks = lm0$coefficients[2], labels = TeX("$\\beta_1$")) +
scale_color_manual(values = c(red_pink, "grey85")) +
theme_simple +
theme(
axis.text.x = element_blank(),
axis.text.y = element_text(size = 18)
)
lm(y ~ x, data = pop_df) %>% tidy()
# Calculate test statistics
t_df <- sim_df %>%
filter(term == "x") %>%
mutate(
t_stat = (estimate - lm0$coefficients[2]) / std.error,
reject = abs(t_stat) > abs(qt(0.975, 28))
)
t_density <- density(t_df$t_stat, from = -5, to = 4) %$%
data.frame(x = x, y = y) %>%
mutate(area = abs(x) > abs(qt(0.975, 28)))
ggplot(data = t_density, aes(x = x, ymin = 0, ymax = y)) +
geom_vline(xintercept = 0) +
geom_ribbon(fill = "grey85", alpha = 0.8) +
geom_ribbon(
data = t_density %>% filter(x < qt(0.025, 28)),
fill = red_pink
) +
geom_ribbon(
data = t_density %>% filter(x > qt(0.975, 28)),
fill = red_pink
) +
geom_hline(yintercept = 0) +
# geom_vline(xintercept = qt(c(0.025, 0.975), df = 28), color = red_pink) +
theme_simple
# Calculate test statistics
p_df <- sim_df %>%
filter(term == "x") %>%
mutate(
p_value = 2 * pt(
q = abs((estimate - lm0$coefficients[2]) / std.error),
df = 28,
lower.tail = F
),
reject = p_value < 0.05
)
p_density <- density(p_df$p_value, from = 0, to = 1) %$%
data.frame(x = x, y = y) %>%
mutate(area = x < 0.05)
ggplot(data = p_density, aes(x = x, ymin = 0, ymax = y)) +
geom_vline(xintercept = 0) +
geom_ribbon(fill = "grey85", alpha = 0.8) +
geom_ribbon(
data = p_density %>% filter(x < 0.05),
fill = red_pink
) +
geom_hline(yintercept = 0) +
theme_simple
options(htmltools.dir.version = FALSE)
library(pacman)
p_load(broom, latex2exp, ggplot2, ggthemes, ggforce, viridis, dplyr, magrittr, knitr, parallel)
# Notes directory
dir_slides <- "/Users/connor/Desktop/GithubProjects/Econometrics/EC421/Spring2021/LectureNotes"
# Knitr options
opts_chunk$set(
comment = "#>",
fig.align = "center",
fig.height = 7,
fig.width = 10.5,
warning = F,
message = F
)
# A blank theme for ggplot
theme_empty <- theme_bw() + theme(
line = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
plot.margin = structure(c(0, 0, -0.5, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_simple <- theme_bw() + theme(
line = element_blank(),
panel.grid = element_blank(),
rect = element_blank(),
strip.text = element_blank(),
axis.text.x = element_text(size = 14),
axis.text.y = element_blank(),
axis.ticks = element_blank(),
plot.title = element_blank(),
axis.title = element_blank(),
# plot.margin = structure(c(0, 0, -1, -1), unit = "lines", valid.unit = 3L, class = "unit"),
legend.position = "none"
)
theme_axes <- theme_empty + theme(
axis.title = element_text(size = 18),
plot.margin = structure(c(0, 0, 0.1, 0), unit = "lines", valid.unit = 3L, class = "unit"),
)
pagedown::chrome_print(
input = here("03-review.html"),
timeout = 60
)
pagedown::chrome_print(
input = "03-review.html",
timeout = 60
)
pagedown::chrome_print(
input = "03-review.html",
timeout = 60
)
pagedown::chrome_print(
input = "03-review.html",
timeout = 60
)
